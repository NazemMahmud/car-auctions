services:
#  devsuite-fe:
#    image: node:21
#    volumes:
#      - ${SHOWCASE_PATH}:/site
#    working_dir: /site
#    environment:
#      - NODE_ENV="development"
#      - WDS_SOCKET_HOST=${DOCKER_HOST_IP}
#      - WDS_SOCKET_PORT=${DEVSUITE_PORT}
#      - CHOKIDAR_USEPOLLING=true
#      - WATCHPACK_POLLING=true
#    command: >
#      bash -c "npm install --legacy-peer-deps && npm run start"
#    networks:
#      - showcase
#    ports:
#      - ${DEVSUITE_PORT}:3000

#  devsuite-controller:
#    image: node:21
#    volumes:
#      - ${CONTROLLER_PATH}:/site
#
#      - ${SSH_PRIVATE_KEY}:/root/.ssh/id_rsa
#    working_dir: /site
#    environment:
#      - NODE_ENV="development"
#      - WDS_SOCKET_HOST=${DOCKER_HOST_IP}
#      - WDS_SOCKET_PORT=${CONTROLLER_PORT}
#      - CHOKIDAR_USEPOLLING=true
#      - WATCHPACK_POLLING=true
#    command: >
#      bash -c "npm install --legacy-peer-deps && npm run start"
#    networks:
#      - showcase
#    ports:
#      - ${CONTROLLER_PORT}:3000
#
#  devsuite-dashboard:
#    image: node:18-buster
#    volumes:
#      - ${DASHBOARD_PATH}:/site
#    working_dir: /site
#    environment:
#      - NODE_ENV="development"
#      - WDS_SOCKET_HOST=${DOCKER_HOST_IP}
#      - WDS_SOCKET_PORT=${DASHBOARD_PORT}
#      - CHOKIDAR_USEPOLLING=true
#      - WATCHPACK_POLLING=true
#    command: >
#      bash -c "npm install --legacy-peer-deps && npm run start"
#    networks:
#      - showcase
#    ports:
#      - ${DASHBOARD_PORT}:3000
#
#  buyers-portal:
#    image: node:21
#    volumes:
#      - ${BUYERS_PORTAL_PATH}:/site
#    working_dir: /site
#    environment:
#      - NODE_ENV="development"
#      - WDS_SOCKET_HOST=${DOCKER_HOST_IP}
#      - WDS_SOCKET_PORT=${BUYERS_PORTAL_PORT}
#      - CHOKIDAR_USEPOLLING=true
#      - WATCHPACK_POLLING=true
#    command: >
#      bash -c "npm install && npm run start"
#    networks:
#      - showcase
#    ports:
#      - ${BUYERS_PORTAL_PORT}:3006

  # gateway:
  #   image: adgroupau/php8.3-fpm:latest
  #   working_dir: /var/www/html
  #   volumes:
  #     - ${GATEWAY_PATH}:/var/www/html:delegated
  #     - ${SSH_PRIVATE_KEY}:/root/.ssh/id_rsa
  #     - ./php-8.3-fpm/php.ini:/usr/local/etc/php/php.ini
  #     - ./php-8.3-fpm/nginx.conf:/etc/nginx/sites-available/default
  #   depends_on:
  #     - redis
  #   networks:
  #     - showcase
  #   ports:
  #     - ${GATEWAY_PORT}:80
  #   healthcheck:
  #     test:
  #       [
  #         "CMD",
  #         "curl",
  #         "-f",
  #         "http://localhost:80/healthcheck"
  #       ]
  #     interval: 600s
  #     retries: 3
  #     timeout: 5s

  # identity:
  #   image: adgroupau/php8.3-fpm:latest
  #   working_dir: /var/www/html
  #   volumes:
  #     - ${IDENTITY_PATH}:/var/www/html:delegated
  #     - ${SSH_PRIVATE_KEY}:/root/.ssh/id_rsa
  #     - ./php-8.3-fpm/php.ini:/usr/local/etc/php/php.ini
  #     - ./php-8.3-fpm/nginx.conf:/etc/nginx/sites-available/default
  #   depends_on:
  #     - mongo-platform-x
  #     - redis
  #   networks:
  #     - showcase
  #   ports:
  #     - ${IDENTITY_PORT}:80
  #   healthcheck:
  #     test:
  #       [
  #         "CMD",
  #         "curl",
  #         "-f",
  #         "http://localhost:80/healthcheck"
  #       ]
  #     interval: 600s
  #     retries: 3
  #     timeout: 5s

  # project:
  #   image: adgroupau/php8.3-fpm:latest
  #   working_dir: /var/www/html
  #   volumes:
  #     - ${PROJECT_PATH}:/var/www/html:delegated
  #     - ${SSH_PRIVATE_KEY}:/root/.ssh/id_rsa
  #     - ./php-8.3-fpm/php.ini:/usr/local/etc/php/php.ini
  #     - ./php-8.3-fpm/nginx.conf:/etc/nginx/sites-available/default
  #   depends_on:
  #     - mongo-platform-x
  #     - redis
  #   networks:
  #     - showcase
  #   ports:
  #     - ${PROJECT_PORT}:80
  #   healthcheck:
  #     test:
  #       [
  #         "CMD",
  #         "curl",
  #         "-f",
  #         "http://localhost:80/healthcheck"
  #       ]
  #     interval: 600s
  #     retries: 3
  #     timeout: 5s

  # notifications:
  #   image: adgroupau/php8.3-fpm:latest
  #   working_dir: /var/www/html
  #   volumes:
  #     - ${NOTIFICATIONS_PATH}:/var/www/html:delegated
  #     - ${SSH_PRIVATE_KEY}:/root/.ssh/id_rsa
  #     - ./php-8.3-fpm/php.ini:/usr/local/etc/php/php.ini
  #     - ./php-8.3-fpm/nginx.conf:/etc/nginx/sites-available/default
  #   depends_on:
  #     - mongo-platform-x
  #     - redis
  #   networks:
  #     - showcase
  #   ports:
  #     - ${NOTIFICATIONS_PORT}:80
  #   healthcheck:
  #     test:
  #       [
  #         "CMD",
  #         "curl",
  #         "-f",
  #         "http://localhost:80/healthcheck"
  #       ]
  #     interval: 600s
  #     retries: 3
  #     timeout: 5s

  postgres:
    image: postgres
    ports:
      - 5432:5432 # LOCALPORT:DOCKERPORT
    environment:
#       MONGO_INITDB_ROOT_USERNAME: '${DB_USERNAME}'
      - POSTGRES_PASSWORD=postgrespw
# #      MONGO_INITDB_DATABASE: '${DB_AUTHENTICATION_DATABASE}'
#       DB_DATABASE: '${DB_DATABASE}'
#       DB_USERNAME: '${DB_USERNAME}'
#       DB_PASSWORD: '${DB_PASSWORD}'
#       DB_USERNAME_READ: '${DB_USERNAME_READ}'
#       DB_PASSWORD_READ: '${DB_PASSWORD_READ}'
# #      DB_AUTHENTICATION_DATABASE: '${DB_AUTHENTICATION_DATABASE}'
    volumes:
      - pgdata:/var/lib/postgresql/data
#       - ./scripts:/docker-entrypoint-initdb.d # !!important, map the folder instead of the any actual file
#     networks:
#       - showcase
#     healthcheck:
#       test: echo 'db.runCommand("ping").ok' | mongo mongo:27017/test --quiet
#       retries: 3
#       interval: 600s
#       timeout: 600s

  # redis:
  #   image: 'redis:alpine'
  #   ports:
  #     - '${FORWARD_REDIS_PORT:-6379}:6379'
  #   volumes:
  #     - ${REDIS_PATH}:/data
  #   networks:
  #     - showcase
  #   healthcheck:
  #     test: [ "CMD", "redis-cli", "ping" ]
  #     retries: 3
  #     timeout: 5s
  #     interval: 600s


# networks:
#   showcase:
#     driver: bridge

volumes:
  pgdata:
  #   driver: local
  # redis_data:
  #   driver: local
